variables:
  SCCACHE_DIR: $(Pipeline.Workspace)/.cache/sccache
  SCCACHE_VERSION: 0.2.9
trigger:
  - master
jobs:
  - job:
    displayName: Build for Linux
    condition: false
    pool:
      vmImage: 'ubuntu-16.04'
    steps:
      - checkout: self
        fetchDepth: 1
      - task: CacheBeta@0
        inputs:
          key: |
            sccache
            rev.1
            $(Agent.OS)
            $(Agent.OSArchitecture)
          path: $(SCCACHE_DIR)
          cacheHitVar: CACHE_RESTORED_SCCACHE
        displayName: Cache sccache
      - script: |
          curl -sSfLO https://github.com/mozilla/sccache/releases/download/$SCCACHE_VERSION/sccache-${SCCACHE_VERSION}-x86_64-unknown-linux-musl.tar.gz
          tar -xvf sccache-${SCCACHE_VERSION}-x86_64-unknown-linux-musl.tar.gz
          echo "##vso[task.prependpath]$PWD/sccache-${SCCACHE_VERSION}-x86_64-unknown-linux-musl"
        displayName: Setup sccache
      - script: RUSTC_WRAPPER="$(command -v sccache)" cargo -v build
        displayName: Build
      - script: rustup component add clippy
        displayName: Setup Clippy
      - script: cargo clippy
        displayName: Clippy
      - script: sccache --show-stats
        displayName: Show sccache stats
        condition: eq(variables.CACHE_RESTORED_SCCACHE, 'true')
  - job:
    displayName: Build for Windows
    pool:
      vmImage: 'windows-latest'
    steps:
      - pwsh: Invoke-WebRequest -Uri https://github.com/mozilla/sccache/releases/download/$Env:SCCACHE_VERSION/sccache-$Env:SCCACHE_VERSION-x86_64-pc-windows-msvc.tar.gz -OutFile sccache.tar.gz
      - script: 7z x sccache.tar.gz
      - script: dir
